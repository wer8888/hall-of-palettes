[gd_scene load_steps=7 format=2]

[ext_resource path="res://scenes/creatures/Creature.gd" type="Script" id=1]
[ext_resource path="res://sprites/creatures/slime.png" type="Texture" id=2]
[ext_resource path="res://audio/death.wav" type="AudioStream" id=3]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform bool outlined = true;
uniform vec4 line_color : hint_color = vec4(1);
uniform float line_thickness : hint_range(0, 10) = 1.0;

uniform float threshold : hint_range(0,1) = 0.01;
uniform vec4 old_dark : hint_color;
uniform vec4 old_med : hint_color;
uniform vec4 old_accent : hint_color;
uniform vec4 old_light : hint_color;
uniform vec4 new_dark : hint_color;
uniform vec4 new_med : hint_color;
uniform vec4 new_accent : hint_color;
uniform vec4 new_light : hint_color;

bool isSameColor(vec4 color, vec4 compareTo) {
	
	if (distance(color, compareTo) < threshold)
		return true;
	else
		return false;
}

void fragment() {
	
	vec4 current_pixel = texture(TEXTURE, UV);
	
	if (isSameColor(current_pixel, old_dark))
		COLOR = new_dark;
	else if (isSameColor(current_pixel, old_med))
		COLOR = new_med;
	else if (isSameColor(current_pixel, old_accent))
		COLOR = new_accent;
	else if (isSameColor(current_pixel, old_light))
		COLOR = new_light;
	else if (outlined) {
		vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
		float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
		outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
		outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
		outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
		outline = min(outline, 1.0);
		vec4 color = texture(TEXTURE, UV);
		COLOR = mix(color, line_color, outline - color.a);
	} else
		COLOR = current_pixel;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 3 )
shader_param/outlined = true
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 10.0
shader_param/threshold = 0.01
shader_param/old_dark = null
shader_param/old_med = null
shader_param/old_accent = null
shader_param/old_light = null
shader_param/new_dark = null
shader_param/new_med = null
shader_param/new_accent = null
shader_param/new_light = null

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 7, 7 )

[node name="Creature" type="KinematicBody2D"]
material = SubResource( 2 )
z_index = 1
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 1 )
shape = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
use_parent_material = true
texture = ExtResource( 2 )

[node name="Die" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )
bus = "Sound"
