[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float threshold : hint_range(0,1) = 0.01;
uniform vec4 old_dark : hint_color;
uniform vec4 old_med : hint_color;
uniform vec4 old_accent : hint_color;
uniform vec4 old_light : hint_color;
uniform vec4 new_dark : hint_color;
uniform vec4 new_med : hint_color;
uniform vec4 new_accent : hint_color;
uniform vec4 new_light : hint_color;

bool isSameColor(vec4 color, vec4 compareTo) {
	
	if (distance(color, compareTo) < threshold)
		return true;
	else
		return false;
}

void fragment() {
	
	vec4 current_pixel = texture(TEXTURE, UV);
	
	if (isSameColor(current_pixel, old_dark))
		COLOR = new_dark;
	else if (isSameColor(current_pixel, old_med))
		COLOR = new_med;
	else if (isSameColor(current_pixel, old_accent))
		COLOR = new_accent;
	else if (isSameColor(current_pixel, old_light))
		COLOR = new_light;
	else
		COLOR = current_pixel;
	
}"

[resource]
shader = SubResource( 1 )
shader_param/threshold = 0.01
shader_param/old_dark = Color( 0.266667, 0.266667, 0.266667, 1 )
shader_param/old_med = Color( 0.443137, 0.443137, 0.443137, 1 )
shader_param/old_accent = Color( 0.603922, 0.603922, 0.603922, 1 )
shader_param/old_light = Color( 0.760784, 0.760784, 0.760784, 1 )
shader_param/new_dark = Color( 0.25098, 0.313726, 0.0627451, 1 )
shader_param/new_med = Color( 0.439216, 0.501961, 0.156863, 1 )
shader_param/new_accent = Color( 0.627451, 0.658824, 0.25098, 1 )
shader_param/new_light = Color( 0.815686, 0.815686, 0.345098, 1 )
